// <auto-generated />
using System;
using ManoTourism.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManoTourism.Migrations.Mano
{
    [DbContext(typeof(ManoContext))]
    [Migration("20241026125531_initialManoCrmMig")]
    partial class initialManoCrmMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ManoTourism.Models.AboutSection", b =>
                {
                    b.Property<int>("AboutSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AboutSectionId"), 1L, 1);

                    b.Property<string>("AboutUsImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutVideo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFocusCaptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFocusCaptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderTLAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderTLEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionCaptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionCaptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoBackground")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AboutSectionId");

                    b.ToTable("AboutSections");
                });

            modelBuilder.Entity("ManoTourism.Models.Affiliate", b =>
                {
                    b.Property<int>("AffiliateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AffiliateId"), 1L, 1);

                    b.Property<string>("AffiliateEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliatePassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliatePic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AffiliateId");

                    b.ToTable("Affiliates");
                });

            modelBuilder.Entity("ManoTourism.Models.AssignEmployeeRoles", b =>
                {
                    b.Property<int>("AssignEmployeeRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignEmployeeRolesId"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeRoleId")
                        .HasColumnType("int");

                    b.HasKey("AssignEmployeeRolesId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeRoleId");

                    b.ToTable("AssignEmployeeRoles");
                });

            modelBuilder.Entity("ManoTourism.Models.CompanyMarkting", b =>
                {
                    b.Property<int>("CompanyMarktingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyMarktingId"), 1L, 1);

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyMarktingId");

                    b.ToTable("CompanyMarktings");

                    b.HasData(
                        new
                        {
                            CompanyMarktingId = 1,
                            TitleAr = "التسويق",
                            TitleEn = "Markting"
                        },
                        new
                        {
                            CompanyMarktingId = 2,
                            TitleAr = "اصدقاء",
                            TitleEn = "Friends"
                        },
                        new
                        {
                            CompanyMarktingId = 3,
                            TitleAr = "موظفينا",
                            TitleEn = "Our Employees"
                        },
                        new
                        {
                            CompanyMarktingId = 4,
                            TitleAr = "لا احد",
                            TitleEn = "No One"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.CompleteTransaction", b =>
                {
                    b.Property<int>("CompleteTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompleteTransactionId"), 1L, 1);

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionDescAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionDescEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompleteTransactionId");

                    b.ToTable("CompleteTransactions");

                    b.HasData(
                        new
                        {
                            CompleteTransactionId = 1,
                            Pic = "p1.png",
                            TransactionDescAr = "تسهيلات",
                            TransactionDescEn = "Facilities",
                            TransactionTitleAr = "تسهيلات ",
                            TransactionTitleEn = "Facilities"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.ContactSocial", b =>
                {
                    b.Property<int>("ContactSocialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactSocialId"), 1L, 1);

                    b.Property<string>("ContactUsImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpentingTimeAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpentingTimeEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telegram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twiter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Youtube")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactSocialId");

                    b.ToTable("ContactSocials");
                });

            modelBuilder.Entity("ManoTourism.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("CountryTLAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryTLEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAtive")
                        .HasColumnType("bit");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryTLAR = "الولايات المتحده الامريكية",
                            CountryTLEN = "United States of America",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 2,
                            CountryTLAR = "كندا",
                            CountryTLEN = "Canada",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 3,
                            CountryTLAR = "المكسيك",
                            CountryTLEN = "Mexico",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 4,
                            CountryTLAR = "ارجنتين",
                            CountryTLEN = "Argentina",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 5,
                            CountryTLAR = "المملكة المتحدة",
                            CountryTLEN = "United Kingdom of Great Britain and Northern Ireland",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 6,
                            CountryTLAR = "المانيا",
                            CountryTLEN = "Germany",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 7,
                            CountryTLAR = "فرنسا",
                            CountryTLEN = "France",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 8,
                            CountryTLAR = "ايطاليا",
                            CountryTLEN = "Italy",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 9,
                            CountryTLAR = "اسبانيا",
                            CountryTLEN = "Spain",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 10,
                            CountryTLAR = "الصين",
                            CountryTLEN = "China",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 11,
                            CountryTLAR = "الهند",
                            CountryTLEN = "India",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 12,
                            CountryTLAR = "استراليا",
                            CountryTLEN = "Australia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 13,
                            CountryTLAR = "جنوب افريقيا",
                            CountryTLEN = "South Africa",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 14,
                            CountryTLAR = "هولندا",
                            CountryTLEN = "Netherlands",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 15,
                            CountryTLAR = "بلجيكا",
                            CountryTLEN = "Belgium",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 16,
                            CountryTLAR = "سويسرا",
                            CountryTLEN = "Switzerland",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 17,
                            CountryTLAR = "النمسا",
                            CountryTLEN = "Austria",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 18,
                            CountryTLAR = "السويد",
                            CountryTLEN = "Sweden",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 19,
                            CountryTLAR = "النرويج",
                            CountryTLEN = "Norway",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 20,
                            CountryTLAR = "الدنمارك",
                            CountryTLEN = "Denmark",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 21,
                            CountryTLAR = "فنلندا",
                            CountryTLEN = "Finland",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 22,
                            CountryTLAR = "اليونان",
                            CountryTLEN = "Greece",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 23,
                            CountryTLAR = "ايرلندا",
                            CountryTLEN = "Ireland",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 24,
                            CountryTLAR = "البرتغال",
                            CountryTLEN = "Portugal",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 25,
                            CountryTLAR = "بولندا",
                            CountryTLEN = "Poland",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 26,
                            CountryTLAR = "اوكرانيا",
                            CountryTLEN = "Ukraine",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 27,
                            CountryTLAR = "رومانيا",
                            CountryTLEN = "Romania",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 28,
                            CountryTLAR = "بلغاريا",
                            CountryTLEN = "Bulgaria",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 29,
                            CountryTLAR = "المجر",
                            CountryTLEN = "Hungary",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 30,
                            CountryTLAR = "تركيا",
                            CountryTLEN = "Turkey",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 31,
                            CountryTLAR = "السعودية",
                            CountryTLEN = "Saudi Arabia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 32,
                            CountryTLAR = "الإمارات العربية المتحده",
                            CountryTLEN = "United Arab Emirates",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 33,
                            CountryTLAR = "ايران",
                            CountryTLEN = "Iran",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 34,
                            CountryTLAR = "فلسطين",
                            CountryTLEN = "Palestine",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 35,
                            CountryTLAR = "مصر",
                            CountryTLEN = "Egypt",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 36,
                            CountryTLAR = "كويا الجنوبية",
                            CountryTLEN = "South Korea",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 37,
                            CountryTLAR = "كوريا الشمالية",
                            CountryTLEN = "North Korea",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 38,
                            CountryTLAR = "فيتنام",
                            CountryTLEN = "Vietnam",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 39,
                            CountryTLAR = "تايلاند",
                            CountryTLEN = "Thailand",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 40,
                            CountryTLAR = "ماليزيا",
                            CountryTLEN = "Malaysia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 41,
                            CountryTLAR = "سنغافوره",
                            CountryTLEN = "Singapore",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 42,
                            CountryTLAR = "اندونيسيا",
                            CountryTLEN = "Indonesia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 43,
                            CountryTLAR = "الفلبين",
                            CountryTLEN = "Philippines",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 44,
                            CountryTLAR = "باكستان",
                            CountryTLEN = "Pakistan",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 45,
                            CountryTLAR = "بنجلادش",
                            CountryTLEN = "Bangladesh",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 46,
                            CountryTLAR = "سيرلانكا",
                            CountryTLEN = "Sri Lanka",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 47,
                            CountryTLAR = "نيبال",
                            CountryTLEN = "Nepal",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 48,
                            CountryTLAR = "نيوزلاندا",
                            CountryTLEN = "New Zealand",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 49,
                            CountryTLAR = "فيجي",
                            CountryTLEN = "Fiji",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 50,
                            CountryTLAR = "بابو غينيا الجديدة",
                            CountryTLEN = "Papua New Guinea",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 51,
                            CountryTLAR = "تشيلي",
                            CountryTLEN = "Chile",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 52,
                            CountryTLAR = "بيرو",
                            CountryTLEN = "Peru",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 53,
                            CountryTLAR = "كولومبيا",
                            CountryTLEN = "Colombia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 54,
                            CountryTLAR = "فنزويلا",
                            CountryTLEN = "Venezuela",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 55,
                            CountryTLAR = "بوليفيا",
                            CountryTLEN = "Bolivia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 56,
                            CountryTLAR = "الاكوداور",
                            CountryTLEN = "Ecuador",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 57,
                            CountryTLAR = "اوراغواي",
                            CountryTLEN = "Uruguay",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 58,
                            CountryTLAR = "بارجواي",
                            CountryTLEN = "Paraguay",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 59,
                            CountryTLAR = "نيجيريا",
                            CountryTLEN = "Nigeria",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 60,
                            CountryTLAR = "كينيا",
                            CountryTLEN = "Kenya",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 61,
                            CountryTLAR = "تنزانيا",
                            CountryTLEN = "Tanzania",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 62,
                            CountryTLAR = "اوغندا",
                            CountryTLEN = "Uganda",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 63,
                            CountryTLAR = "غانا",
                            CountryTLEN = "Ghana",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 64,
                            CountryTLAR = "مدغشقر",
                            CountryTLEN = "Madagascar",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 65,
                            CountryTLAR = "جزائر",
                            CountryTLEN = "Algeria",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 66,
                            CountryTLAR = "تونس",
                            CountryTLEN = "Tunisia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 67,
                            CountryTLAR = "مغرب",
                            CountryTLEN = "Morocco",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 68,
                            CountryTLAR = "افغانستان",
                            CountryTLEN = "Afghanistan",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 69,
                            CountryTLAR = "اردن",
                            CountryTLEN = "Jordan",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 70,
                            CountryTLAR = "لبنان",
                            CountryTLEN = "Lebanon",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 71,
                            CountryTLAR = "قطر",
                            CountryTLEN = "Qatar",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 72,
                            CountryTLAR = "عمان",
                            CountryTLEN = "Oman",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 73,
                            CountryTLAR = "كويت",
                            CountryTLEN = "Kuwait",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 74,
                            CountryTLAR = "منغوليا",
                            CountryTLEN = "Mongolia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 75,
                            CountryTLAR = "كازاخستان",
                            CountryTLEN = "Kazakhstan",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 76,
                            CountryTLAR = "كمبوديا",
                            CountryTLEN = "Cambodia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 77,
                            CountryTLAR = "صربيا",
                            CountryTLEN = "Serbia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 78,
                            CountryTLAR = "كرواتيا",
                            CountryTLEN = "Croatia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 79,
                            CountryTLAR = "سولفينا",
                            CountryTLEN = "Slovenia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 80,
                            CountryTLAR = "سلوفاكيا",
                            CountryTLEN = "Slovakia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 81,
                            CountryTLAR = "ايسلندا",
                            CountryTLEN = "Iceland",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 82,
                            CountryTLAR = "بيلاروسيا",
                            CountryTLEN = "Belarus",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 83,
                            CountryTLAR = "قبرص",
                            CountryTLEN = "Cyprus",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 84,
                            CountryTLAR = "البوسنه والهرسك",
                            CountryTLEN = "Bosnia and Herzegovina",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 85,
                            CountryTLAR = "استونيا",
                            CountryTLEN = "Estonia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 86,
                            CountryTLAR = "لاتفيا",
                            CountryTLEN = "Latvia",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 87,
                            CountryTLAR = "ليتوانيا",
                            CountryTLEN = "Lithuania",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 88,
                            CountryTLAR = "مالطا",
                            CountryTLEN = "Malta",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 89,
                            CountryTLAR = "لوكسمبورغ",
                            CountryTLEN = "Luxembourg",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 90,
                            CountryTLAR = "ساموا",
                            CountryTLEN = "Samoa",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 91,
                            CountryTLAR = "تونجا",
                            CountryTLEN = "Tonga",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 92,
                            CountryTLAR = "غيانا",
                            CountryTLEN = "Guyana",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 93,
                            CountryTLAR = "سورينام",
                            CountryTLEN = "Suriname",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 94,
                            CountryTLAR = "غواتيمالا",
                            CountryTLEN = "Guatemala",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 95,
                            CountryTLAR = "هندراس",
                            CountryTLEN = "Honduras",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 96,
                            CountryTLAR = "كوستاريكا",
                            CountryTLEN = "Costa Rica",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 97,
                            CountryTLAR = "بنما",
                            CountryTLEN = "Panama",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 98,
                            CountryTLAR = "السلفادور",
                            CountryTLEN = "El Salvador",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 99,
                            CountryTLAR = "نيكارغوا",
                            CountryTLEN = "Nicaragua",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 100,
                            CountryTLAR = "برازيل",
                            CountryTLEN = "Brazil",
                            IsAtive = true
                        },
                        new
                        {
                            CountryId = 101,
                            CountryTLAR = "يابان",
                            CountryTLEN = "Japan",
                            IsAtive = true
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeePic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ManoTourism.Models.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeRoleId"), 1L, 1);

                    b.Property<string>("RoleTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeRoleId");

                    b.ToTable("EmployeeRoles");

                    b.HasData(
                        new
                        {
                            EmployeeRoleId = 1,
                            RoleTitleAr = "إداره التأشيرات",
                            RoleTitleEn = "Visas Management"
                        },
                        new
                        {
                            EmployeeRoleId = 2,
                            RoleTitleAr = "إداره الرحلات",
                            RoleTitleEn = "Trips Management"
                        },
                        new
                        {
                            EmployeeRoleId = 3,
                            RoleTitleAr = "إداره التأمينات",
                            RoleTitleEn = "Insurance Management"
                        },
                        new
                        {
                            EmployeeRoleId = 4,
                            RoleTitleAr = "إداره الفنادق",
                            RoleTitleEn = "Hotels Management "
                        },
                        new
                        {
                            EmployeeRoleId = 5,
                            RoleTitleAr = "إداره تذاكر الطيران",
                            RoleTitleEn = "Tickets Management"
                        },
                        new
                        {
                            EmployeeRoleId = 6,
                            RoleTitleAr = "إداره تأسيس الشركات",
                            RoleTitleEn = "Establishing Companies"
                        },
                        new
                        {
                            EmployeeRoleId = 7,
                            RoleTitleAr = "إداره الموقع الخارجي",
                            RoleTitleEn = "Manage Public Site"
                        },
                        new
                        {
                            EmployeeRoleId = 8,
                            RoleTitleAr = "إداره الطلبات الجديده (إسناد الطلبات للموظفين)",
                            RoleTitleEn = "New Requests Management(Assigning Request To Employees)"
                        },
                        new
                        {
                            EmployeeRoleId = 9,
                            RoleTitleAr = "إداره الطلبات التي تحت المعالجه (إعاده إسناد الطلبات للموظفين)",
                            RoleTitleEn = "Processing Requests Management(ReAssigning Request To Employees)"
                        },
                        new
                        {
                            EmployeeRoleId = 10,
                            RoleTitleAr = "إداره الطلبات الملغيه (إعاده الطلب كطلب جديد)",
                            RoleTitleEn = "Canceled Requests Management(Return Request To New Status)"
                        },
                        new
                        {
                            EmployeeRoleId = 11,
                            RoleTitleAr = "إداره الطلبات المرفوضه (إعاده الطلب كطلب جديد)",
                            RoleTitleEn = "Rejected Requests Management(Return Request To New Status)"
                        },
                        new
                        {
                            EmployeeRoleId = 12,
                            RoleTitleAr = "إداره تخليص المعاملات",
                            RoleTitleEn = "Complete Transactions Management"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.EstablishingCompany", b =>
                {
                    b.Property<int>("EstablishingCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstablishingCompanyId"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstablishingCompanyId");

                    b.ToTable("EstablishingCompanies");
                });

            modelBuilder.Entity("ManoTourism.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelMainImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Review")
                        .HasColumnType("float");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("ManoTourism.Models.HotelImage", b =>
                {
                    b.Property<int>("HotelImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelImageId"), 1L, 1);

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("HotelImageId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelImages");
                });

            modelBuilder.Entity("ManoTourism.Models.HotelReview", b =>
                {
                    b.Property<int>("HotelReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelReviewId"), 1L, 1);

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("ReviewAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewWriterImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewWriterNameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewWriterNameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HotelReviewId");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelReviews");
                });

            modelBuilder.Entity("ManoTourism.Models.Insurance", b =>
                {
                    b.Property<int>("InsuranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceId"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationInMonth")
                        .HasColumnType("int");

                    b.Property<string>("InsuranceTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InsuranceTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("NewPrice")
                        .HasColumnType("float");

                    b.Property<double>("OldPrice")
                        .HasColumnType("float");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsuranceId");

                    b.HasIndex("InsuranceTypeId");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("ManoTourism.Models.InsuranceType", b =>
                {
                    b.Property<int>("InsuranceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InsuranceTypeId"), 1L, 1);

                    b.Property<string>("InsuranceTypeTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceTypeTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("InsuranceTypeId");

                    b.ToTable("InsuranceTypes");

                    b.HasData(
                        new
                        {
                            InsuranceTypeId = 1,
                            InsuranceTypeTitleAr = "تأمين سيارات",
                            InsuranceTypeTitleEn = "Cars Insurance",
                            IsDeleted = false
                        },
                        new
                        {
                            InsuranceTypeId = 2,
                            InsuranceTypeTitleAr = "تأمين صحي",
                            InsuranceTypeTitleEn = "Health insurance",
                            IsDeleted = false
                        },
                        new
                        {
                            InsuranceTypeId = 3,
                            InsuranceTypeTitleAr = "تأمين علي الحياه",
                            InsuranceTypeTitleEn = "Life insurance",
                            IsDeleted = false
                        },
                        new
                        {
                            InsuranceTypeId = 4,
                            InsuranceTypeTitleAr = "تأمين سفر",
                            InsuranceTypeTitleEn = "Travel insurance",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.ManoEntityType", b =>
                {
                    b.Property<int>("ManoEntityTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManoEntityTypeId"), 1L, 1);

                    b.Property<string>("EntityTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManoEntityTypeId");

                    b.ToTable("ManoEntityTypes");

                    b.HasData(
                        new
                        {
                            ManoEntityTypeId = 1,
                            EntityTitleAr = "تأشيرات",
                            EntityTitleEn = "Visa"
                        },
                        new
                        {
                            ManoEntityTypeId = 2,
                            EntityTitleAr = "رحلات",
                            EntityTitleEn = "Tours"
                        },
                        new
                        {
                            ManoEntityTypeId = 3,
                            EntityTitleAr = "تأمينات",
                            EntityTitleEn = "Insurance"
                        },
                        new
                        {
                            ManoEntityTypeId = 4,
                            EntityTitleAr = " تأسيس الشركات",
                            EntityTitleEn = "Establishing Companies"
                        },
                        new
                        {
                            ManoEntityTypeId = 5,
                            EntityTitleAr = " فنادق",
                            EntityTitleEn = "Hotels"
                        },
                        new
                        {
                            ManoEntityTypeId = 6,
                            EntityTitleAr = " تذاكر طيران",
                            EntityTitleEn = "Tickets"
                        },
                        new
                        {
                            ManoEntityTypeId = 7,
                            EntityTitleAr = " تخليص معاملات",
                            EntityTitleEn = "Complete Transactions"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"), 1L, 1);

                    b.Property<bool>("IsAtive")
                        .HasColumnType("bit");

                    b.Property<string>("NationalityTLAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityTLEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            NationalityId = 1,
                            IsAtive = true,
                            NationalityTLAR = "امريكي",
                            NationalityTLEN = "American"
                        },
                        new
                        {
                            NationalityId = 2,
                            IsAtive = true,
                            NationalityTLAR = "كندي",
                            NationalityTLEN = "Canadian"
                        },
                        new
                        {
                            NationalityId = 3,
                            IsAtive = true,
                            NationalityTLAR = "مكسيكي",
                            NationalityTLEN = "Mexican"
                        },
                        new
                        {
                            NationalityId = 4,
                            IsAtive = true,
                            NationalityTLAR = "ارجنتيني",
                            NationalityTLEN = "Argentinean"
                        },
                        new
                        {
                            NationalityId = 5,
                            IsAtive = true,
                            NationalityTLAR = "بريطاني",
                            NationalityTLEN = "British"
                        },
                        new
                        {
                            NationalityId = 6,
                            IsAtive = true,
                            NationalityTLAR = "الماني",
                            NationalityTLEN = "German"
                        },
                        new
                        {
                            NationalityId = 7,
                            IsAtive = true,
                            NationalityTLAR = "فرنسي",
                            NationalityTLEN = "French"
                        },
                        new
                        {
                            NationalityId = 8,
                            IsAtive = true,
                            NationalityTLAR = "ايطالي",
                            NationalityTLEN = "Italian"
                        },
                        new
                        {
                            NationalityId = 9,
                            IsAtive = true,
                            NationalityTLAR = "اسبانيي",
                            NationalityTLEN = "Spanish"
                        },
                        new
                        {
                            NationalityId = 10,
                            IsAtive = true,
                            NationalityTLAR = "صيني",
                            NationalityTLEN = "Chinese"
                        },
                        new
                        {
                            NationalityId = 11,
                            IsAtive = true,
                            NationalityTLAR = "هندي",
                            NationalityTLEN = "Indian"
                        },
                        new
                        {
                            NationalityId = 12,
                            IsAtive = true,
                            NationalityTLAR = "استرالي",
                            NationalityTLEN = "Australian"
                        },
                        new
                        {
                            NationalityId = 13,
                            IsAtive = true,
                            NationalityTLAR = "جنوب افريقي",
                            NationalityTLEN = "South African"
                        },
                        new
                        {
                            NationalityId = 14,
                            IsAtive = true,
                            NationalityTLAR = "هولندي",
                            NationalityTLEN = "Dutch"
                        },
                        new
                        {
                            NationalityId = 15,
                            IsAtive = true,
                            NationalityTLAR = "بلجيكي",
                            NationalityTLEN = "Belgian"
                        },
                        new
                        {
                            NationalityId = 16,
                            IsAtive = true,
                            NationalityTLAR = "سويسري",
                            NationalityTLEN = "Swiss"
                        },
                        new
                        {
                            NationalityId = 17,
                            IsAtive = true,
                            NationalityTLAR = "نمساوي",
                            NationalityTLEN = "Austrian"
                        },
                        new
                        {
                            NationalityId = 18,
                            IsAtive = true,
                            NationalityTLAR = "سويدي",
                            NationalityTLEN = "Swedish"
                        },
                        new
                        {
                            NationalityId = 19,
                            IsAtive = true,
                            NationalityTLAR = "نرويجي",
                            NationalityTLEN = "Norwegian"
                        },
                        new
                        {
                            NationalityId = 20,
                            IsAtive = true,
                            NationalityTLAR = "دنماركي",
                            NationalityTLEN = "Danish"
                        },
                        new
                        {
                            NationalityId = 21,
                            IsAtive = true,
                            NationalityTLAR = "فنلندي",
                            NationalityTLEN = "Finnish"
                        },
                        new
                        {
                            NationalityId = 22,
                            IsAtive = true,
                            NationalityTLAR = "يوناني",
                            NationalityTLEN = "Greek"
                        },
                        new
                        {
                            NationalityId = 23,
                            IsAtive = true,
                            NationalityTLAR = "ايرلندي",
                            NationalityTLEN = "Irish"
                        },
                        new
                        {
                            NationalityId = 24,
                            IsAtive = true,
                            NationalityTLAR = "برتغالي",
                            NationalityTLEN = "Portuguese"
                        },
                        new
                        {
                            NationalityId = 25,
                            IsAtive = true,
                            NationalityTLAR = "بولندي",
                            NationalityTLEN = "Polish"
                        },
                        new
                        {
                            NationalityId = 26,
                            IsAtive = true,
                            NationalityTLAR = "اوكراني",
                            NationalityTLEN = "Ukrainian"
                        },
                        new
                        {
                            NationalityId = 27,
                            IsAtive = true,
                            NationalityTLAR = "روماني",
                            NationalityTLEN = "Romanian"
                        },
                        new
                        {
                            NationalityId = 28,
                            IsAtive = true,
                            NationalityTLAR = "بلغاري",
                            NationalityTLEN = "Bulgarian"
                        },
                        new
                        {
                            NationalityId = 29,
                            IsAtive = true,
                            NationalityTLAR = "مجري",
                            NationalityTLEN = "Hungarian"
                        },
                        new
                        {
                            NationalityId = 30,
                            IsAtive = true,
                            NationalityTLAR = "تركي",
                            NationalityTLEN = "Turkish"
                        },
                        new
                        {
                            NationalityId = 31,
                            IsAtive = true,
                            NationalityTLAR = "سعودي",
                            NationalityTLEN = "Saudi"
                        },
                        new
                        {
                            NationalityId = 32,
                            IsAtive = true,
                            NationalityTLAR = "إماراتي ",
                            NationalityTLEN = "Emirati"
                        },
                        new
                        {
                            NationalityId = 33,
                            IsAtive = true,
                            NationalityTLAR = "ايراني",
                            NationalityTLEN = "Iranian"
                        },
                        new
                        {
                            NationalityId = 34,
                            IsAtive = true,
                            NationalityTLAR = "فلسطيني",
                            NationalityTLEN = "Palestinian"
                        },
                        new
                        {
                            NationalityId = 35,
                            IsAtive = true,
                            NationalityTLAR = "مصري",
                            NationalityTLEN = "Egyptian"
                        },
                        new
                        {
                            NationalityId = 36,
                            IsAtive = true,
                            NationalityTLAR = "كوري",
                            NationalityTLEN = "Korean"
                        },
                        new
                        {
                            NationalityId = 37,
                            IsAtive = true,
                            NationalityTLAR = "برازيلي",
                            NationalityTLEN = "Brazilian"
                        },
                        new
                        {
                            NationalityId = 38,
                            IsAtive = true,
                            NationalityTLAR = "فيتنامي",
                            NationalityTLEN = "Vietnamese"
                        },
                        new
                        {
                            NationalityId = 39,
                            IsAtive = true,
                            NationalityTLAR = "تايلاندي",
                            NationalityTLEN = "Thai"
                        },
                        new
                        {
                            NationalityId = 40,
                            IsAtive = true,
                            NationalityTLAR = "ماليزي",
                            NationalityTLEN = "Malaysian"
                        },
                        new
                        {
                            NationalityId = 41,
                            IsAtive = true,
                            NationalityTLAR = "سنغافوري",
                            NationalityTLEN = "Singaporean"
                        },
                        new
                        {
                            NationalityId = 42,
                            IsAtive = true,
                            NationalityTLAR = "اندونيسي",
                            NationalityTLEN = "Indonesian"
                        },
                        new
                        {
                            NationalityId = 43,
                            IsAtive = true,
                            NationalityTLAR = "فلبيني",
                            NationalityTLEN = "Filipino"
                        },
                        new
                        {
                            NationalityId = 44,
                            IsAtive = true,
                            NationalityTLAR = "باكستاني",
                            NationalityTLEN = "Pakistani"
                        },
                        new
                        {
                            NationalityId = 45,
                            IsAtive = true,
                            NationalityTLAR = "بنجلادشي",
                            NationalityTLEN = "Bangladeshi"
                        },
                        new
                        {
                            NationalityId = 46,
                            IsAtive = true,
                            NationalityTLAR = "سيرلانكي",
                            NationalityTLEN = "Lankan"
                        },
                        new
                        {
                            NationalityId = 47,
                            IsAtive = true,
                            NationalityTLAR = "نيبالي",
                            NationalityTLEN = "Nepali"
                        },
                        new
                        {
                            NationalityId = 48,
                            IsAtive = true,
                            NationalityTLAR = "نيوزلاندي",
                            NationalityTLEN = "Zealander"
                        },
                        new
                        {
                            NationalityId = 49,
                            IsAtive = true,
                            NationalityTLAR = "فيجي",
                            NationalityTLEN = "Fijian"
                        },
                        new
                        {
                            NationalityId = 50,
                            IsAtive = true,
                            NationalityTLAR = " غينيا الجديدة",
                            NationalityTLEN = "Papua New Guinean"
                        },
                        new
                        {
                            NationalityId = 51,
                            IsAtive = true,
                            NationalityTLAR = "تشيلي",
                            NationalityTLEN = "Chilean"
                        },
                        new
                        {
                            NationalityId = 52,
                            IsAtive = true,
                            NationalityTLAR = "بيرو",
                            NationalityTLEN = "Peruvian"
                        },
                        new
                        {
                            NationalityId = 53,
                            IsAtive = true,
                            NationalityTLAR = "كولومبيي",
                            NationalityTLEN = "Colombian"
                        },
                        new
                        {
                            NationalityId = 54,
                            IsAtive = true,
                            NationalityTLAR = "فنزويلي",
                            NationalityTLEN = "Venezuelan"
                        },
                        new
                        {
                            NationalityId = 55,
                            IsAtive = true,
                            NationalityTLAR = "بوليفي",
                            NationalityTLEN = "Bolivian"
                        },
                        new
                        {
                            NationalityId = 56,
                            IsAtive = true,
                            NationalityTLAR = "اكوداوري",
                            NationalityTLEN = "Ecuadorian"
                        },
                        new
                        {
                            NationalityId = 57,
                            IsAtive = true,
                            NationalityTLAR = "اوراغواني",
                            NationalityTLEN = "Uruguayan"
                        },
                        new
                        {
                            NationalityId = 58,
                            IsAtive = true,
                            NationalityTLAR = "بارجواني",
                            NationalityTLEN = "Paraguayan"
                        },
                        new
                        {
                            NationalityId = 59,
                            IsAtive = true,
                            NationalityTLAR = "نيجيري",
                            NationalityTLEN = "Nigerian"
                        },
                        new
                        {
                            NationalityId = 60,
                            IsAtive = true,
                            NationalityTLAR = "كيني",
                            NationalityTLEN = "Kenyan"
                        },
                        new
                        {
                            NationalityId = 61,
                            IsAtive = true,
                            NationalityTLAR = "تنزاني",
                            NationalityTLEN = "Tanzanian"
                        },
                        new
                        {
                            NationalityId = 62,
                            IsAtive = true,
                            NationalityTLAR = "اوغندي",
                            NationalityTLEN = "Ugandan"
                        },
                        new
                        {
                            NationalityId = 63,
                            IsAtive = true,
                            NationalityTLAR = "غانا",
                            NationalityTLEN = "Ghanaian"
                        },
                        new
                        {
                            NationalityId = 64,
                            IsAtive = true,
                            NationalityTLAR = "مدغشقر",
                            NationalityTLEN = "Malagasy"
                        },
                        new
                        {
                            NationalityId = 65,
                            IsAtive = true,
                            NationalityTLAR = "جزائري",
                            NationalityTLEN = "Algerian"
                        },
                        new
                        {
                            NationalityId = 66,
                            IsAtive = true,
                            NationalityTLAR = "تونسي",
                            NationalityTLEN = "Tunisian"
                        },
                        new
                        {
                            NationalityId = 67,
                            IsAtive = true,
                            NationalityTLAR = "مغربي",
                            NationalityTLEN = "Moroccan"
                        },
                        new
                        {
                            NationalityId = 68,
                            IsAtive = true,
                            NationalityTLAR = "افغانستاني",
                            NationalityTLEN = "Afghan"
                        },
                        new
                        {
                            NationalityId = 69,
                            IsAtive = true,
                            NationalityTLAR = "اردني",
                            NationalityTLEN = "Jordanian"
                        },
                        new
                        {
                            NationalityId = 70,
                            IsAtive = true,
                            NationalityTLAR = "لبناني",
                            NationalityTLEN = "Lebanese"
                        },
                        new
                        {
                            NationalityId = 71,
                            IsAtive = true,
                            NationalityTLAR = "قطري",
                            NationalityTLEN = "Qatari"
                        },
                        new
                        {
                            NationalityId = 72,
                            IsAtive = true,
                            NationalityTLAR = "عماني",
                            NationalityTLEN = "Omani"
                        },
                        new
                        {
                            NationalityId = 73,
                            IsAtive = true,
                            NationalityTLAR = "كويتي",
                            NationalityTLEN = "Kuwaiti"
                        },
                        new
                        {
                            NationalityId = 74,
                            IsAtive = true,
                            NationalityTLAR = "منغولي",
                            NationalityTLEN = "Mongolian"
                        },
                        new
                        {
                            NationalityId = 75,
                            IsAtive = true,
                            NationalityTLAR = "كازاخستاني",
                            NationalityTLEN = "Kazakh"
                        },
                        new
                        {
                            NationalityId = 76,
                            IsAtive = true,
                            NationalityTLAR = "كمبودي",
                            NationalityTLEN = "Cambodian"
                        },
                        new
                        {
                            NationalityId = 77,
                            IsAtive = true,
                            NationalityTLAR = "صربي",
                            NationalityTLEN = "Serbian"
                        },
                        new
                        {
                            NationalityId = 78,
                            IsAtive = true,
                            NationalityTLAR = "كرواتي",
                            NationalityTLEN = "Croatian"
                        },
                        new
                        {
                            NationalityId = 79,
                            IsAtive = true,
                            NationalityTLAR = "سولفيني",
                            NationalityTLEN = "Slovenian"
                        },
                        new
                        {
                            NationalityId = 80,
                            IsAtive = true,
                            NationalityTLAR = "سلوفاكي",
                            NationalityTLEN = "Slovak"
                        },
                        new
                        {
                            NationalityId = 81,
                            IsAtive = true,
                            NationalityTLAR = "ايسلندي",
                            NationalityTLEN = "Icelandic"
                        },
                        new
                        {
                            NationalityId = 82,
                            IsAtive = true,
                            NationalityTLAR = "بيلاروسي",
                            NationalityTLEN = "Belarusian"
                        },
                        new
                        {
                            NationalityId = 83,
                            IsAtive = true,
                            NationalityTLAR = "قبرصي",
                            NationalityTLEN = "Cypriot"
                        },
                        new
                        {
                            NationalityId = 84,
                            IsAtive = true,
                            NationalityTLAR = "بوسنه",
                            NationalityTLEN = "Bosnian"
                        },
                        new
                        {
                            NationalityId = 85,
                            IsAtive = true,
                            NationalityTLAR = "استواني",
                            NationalityTLEN = "Estonian"
                        },
                        new
                        {
                            NationalityId = 86,
                            IsAtive = true,
                            NationalityTLAR = "لاتيفي",
                            NationalityTLEN = "Latvian"
                        },
                        new
                        {
                            NationalityId = 87,
                            IsAtive = true,
                            NationalityTLAR = "ليتواني",
                            NationalityTLEN = "Lithuanian"
                        },
                        new
                        {
                            NationalityId = 88,
                            IsAtive = true,
                            NationalityTLAR = "مالطا",
                            NationalityTLEN = "Maltese"
                        },
                        new
                        {
                            NationalityId = 89,
                            IsAtive = true,
                            NationalityTLAR = "لوكسمبورغ",
                            NationalityTLEN = "Luxembourger"
                        },
                        new
                        {
                            NationalityId = 90,
                            IsAtive = true,
                            NationalityTLAR = "ساموا",
                            NationalityTLEN = "Samoa"
                        },
                        new
                        {
                            NationalityId = 91,
                            IsAtive = true,
                            NationalityTLAR = "تونجا",
                            NationalityTLEN = "Tongan"
                        },
                        new
                        {
                            NationalityId = 92,
                            IsAtive = true,
                            NationalityTLAR = "غيانا",
                            NationalityTLEN = "Guyanese"
                        },
                        new
                        {
                            NationalityId = 93,
                            IsAtive = true,
                            NationalityTLAR = "سورينامي",
                            NationalityTLEN = "Surinamese"
                        },
                        new
                        {
                            NationalityId = 94,
                            IsAtive = true,
                            NationalityTLAR = "غواتيمالا",
                            NationalityTLEN = "Guatemalan"
                        },
                        new
                        {
                            NationalityId = 95,
                            IsAtive = true,
                            NationalityTLAR = "هندراسي",
                            NationalityTLEN = "Honduran"
                        },
                        new
                        {
                            NationalityId = 96,
                            IsAtive = true,
                            NationalityTLAR = "كوستاريكاي",
                            NationalityTLEN = "Costa Rican"
                        },
                        new
                        {
                            NationalityId = 97,
                            IsAtive = true,
                            NationalityTLAR = "بنمي",
                            NationalityTLEN = "Panamanian"
                        },
                        new
                        {
                            NationalityId = 98,
                            IsAtive = true,
                            NationalityTLAR = "سلفادوري",
                            NationalityTLEN = "Salvadoran"
                        },
                        new
                        {
                            NationalityId = 99,
                            IsAtive = true,
                            NationalityTLAR = "نيكارغوي",
                            NationalityTLEN = "Nicaraguan"
                        },
                        new
                        {
                            NationalityId = 100,
                            IsAtive = true,
                            NationalityTLAR = "ياباني",
                            NationalityTLEN = "Japanese"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.Offer", b =>
                {
                    b.Property<int>("OfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OfferTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OfferId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            OfferId = 1,
                            IsActive = true,
                            OfferTitleAr = "عروض التأشيرات داخل دولة الإمارات ",
                            OfferTitleEn = "Visa In UAE Offers"
                        },
                        new
                        {
                            OfferId = 2,
                            IsActive = true,
                            OfferTitleAr = "عروض التأشيرات خارج دولة الإمارات ",
                            OfferTitleEn = "Visa Out UAE Offers"
                        },
                        new
                        {
                            OfferId = 3,
                            IsActive = true,
                            OfferTitleAr = "عروض الرحلات داخل دولة الإمارات ",
                            OfferTitleEn = "Tours In UAE Offers"
                        },
                        new
                        {
                            OfferId = 4,
                            IsActive = true,
                            OfferTitleAr = "عروض الرحلات خارج دولة الإمارات ",
                            OfferTitleEn = "Tours Out UAE Offers"
                        },
                        new
                        {
                            OfferId = 5,
                            IsActive = true,
                            OfferTitleAr = "عروض  تذاكر الطيران ",
                            OfferTitleEn = "Ticket Offers"
                        },
                        new
                        {
                            OfferId = 6,
                            IsActive = true,
                            OfferTitleAr = "عروض  التأمينات ",
                            OfferTitleEn = "Insurances Offers"
                        },
                        new
                        {
                            OfferId = 7,
                            IsActive = true,
                            OfferTitleAr = "عروض الفنادق ",
                            OfferTitleEn = "Hotels Offers"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.OfferImage", b =>
                {
                    b.Property<int>("OfferImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferImageId"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("OfferImageId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferImages");
                });

            modelBuilder.Entity("ManoTourism.Models.PageContent", b =>
                {
                    b.Property<int>("PageContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PageContentId"), 1L, 1);

                    b.Property<string>("ContentAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PageContentId");

                    b.ToTable("PageContents");

                    b.HasData(
                        new
                        {
                            PageContentId = 1,
                            ContentAr = "سياسة الخصوصية",
                            ContentEn = "Privacy Policy",
                            PageTitleAr = "سياسة الخصوصية",
                            PageTitleEn = "Privacy Policy"
                        },
                        new
                        {
                            PageContentId = 2,
                            ContentAr = "الشروظ والاحكام",
                            ContentEn = "Terms && Conditions",
                            PageTitleAr = "الشروظ والاحكام",
                            PageTitleEn = "Terms && Conditions"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.PublicSlider", b =>
                {
                    b.Property<int>("PublicSliderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublicSliderId"), 1L, 1);

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsImage")
                        .HasColumnType("bit");

                    b.HasKey("PublicSliderId");

                    b.ToTable("PublicSliders");
                });

            modelBuilder.Entity("ManoTourism.Models.RejectReason", b =>
                {
                    b.Property<int>("RejectReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RejectReasonId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RejectReasonTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectReasonTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RejectReasonId");

                    b.ToTable("RejectReasons");
                });

            modelBuilder.Entity("ManoTourism.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffiliateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AssignedDateToEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BeturnedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyMarktingId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmployeeRequestUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HotelArrivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HotelDepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManoEntityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OneWay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OneWayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RejectReasonId")
                        .HasColumnType("int");

                    b.Property<string>("RejectRequestReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisaRequestStatusId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("CompanyMarktingId");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ManoEntityTypeId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("RejectReasonId");

                    b.HasIndex("VisaRequestStatusId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ManoTourism.Models.SubscribeNewsLetter", b =>
                {
                    b.Property<int>("SubscribeNewLetterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscribeNewLetterId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubscribeNewLetterId");

                    b.ToTable("SubscribeNewsLetters");
                });

            modelBuilder.Entity("ManoTourism.Models.Testimonial", b =>
                {
                    b.Property<int>("TestimonialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestimonialId"), 1L, 1);

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TestimonialId");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("ManoTourism.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"), 1L, 1);

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketDescAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketDescEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            Pic = "p1.png",
                            TicketDescAr = "حجز تذكره طيران",
                            TicketDescEn = "Ticket Booking",
                            TicketTitleAr = "حجز تذكره طيران ",
                            TicketTitleEn = "Ticket Booking"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("NewPricePerPerson")
                        .HasColumnType("float");

                    b.Property<double>("OldPricePerPerson")
                        .HasColumnType("float");

                    b.Property<double>("ReviewRating")
                        .HasColumnType("float");

                    b.Property<string>("TripImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripTargetId")
                        .HasColumnType("int");

                    b.Property<string>("TripTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripTypeId")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.HasIndex("CountryId");

                    b.HasIndex("TripTargetId");

                    b.HasIndex("TripTypeId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("ManoTourism.Models.TripImage", b =>
                {
                    b.Property<int>("TripImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripImageId"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("TripImageId");

                    b.HasIndex("TripId");

                    b.ToTable("TripImages");
                });

            modelBuilder.Entity("ManoTourism.Models.TripProgram", b =>
                {
                    b.Property<int>("TripProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripProgramId"), 1L, 1);

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("TripProgramId");

                    b.HasIndex("TripId");

                    b.ToTable("TripPrograms");
                });

            modelBuilder.Entity("ManoTourism.Models.TripTarget", b =>
                {
                    b.Property<int>("TripTargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripTargetId"), 1L, 1);

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripTargetId");

                    b.ToTable("TripTargets");

                    b.HasData(
                        new
                        {
                            TripTargetId = 1,
                            TitleAr = "داخل الإمارات العربية المتحده",
                            TitleEn = "In UAE"
                        },
                        new
                        {
                            TripTargetId = 2,
                            TitleAr = "خارج الإمارات العربية المتحده",
                            TitleEn = "Out UAE"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.TripType", b =>
                {
                    b.Property<int>("TripTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripTypeId"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TripTypeTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TripTypeTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripTypeId");

                    b.ToTable("TripTypes");

                    b.HasData(
                        new
                        {
                            TripTypeId = 1,
                            IsDeleted = false,
                            TripTypeTitleAr = "رحلات المغامرات",
                            TripTypeTitleEn = "Adventure Tours"
                        },
                        new
                        {
                            TripTypeId = 2,
                            IsDeleted = false,
                            TripTypeTitleAr = "رحلات ثقافية",
                            TripTypeTitleEn = "Cultural Tours"
                        },
                        new
                        {
                            TripTypeId = 3,
                            IsDeleted = false,
                            TripTypeTitleAr = "الحياة البرية ورحلات السفاري",
                            TripTypeTitleEn = "Wildlife & Safari"
                        },
                        new
                        {
                            TripTypeId = 4,
                            IsDeleted = false,
                            TripTypeTitleAr = "رحلات تاريخية",
                            TripTypeTitleEn = "Historical Tours"
                        },
                        new
                        {
                            TripTypeId = 5,
                            IsDeleted = false,
                            TripTypeTitleAr = "رحلات خاصة",
                            TripTypeTitleEn = "Private Tours"
                        },
                        new
                        {
                            TripTypeId = 6,
                            IsDeleted = false,
                            TripTypeTitleAr = "رحلات برية",
                            TripTypeTitleEn = "Road Trips"
                        },
                        new
                        {
                            TripTypeId = 7,
                            IsDeleted = false,
                            TripTypeTitleAr = "رحلات سياحية في المدينة",
                            TripTypeTitleEn = "City Tours"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.UserMessage", b =>
                {
                    b.Property<int>("UserMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserMessageId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserMessageId");

                    b.ToTable("UserMessages");
                });

            modelBuilder.Entity("ManoTourism.Models.Visa", b =>
                {
                    b.Property<int>("VisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaId"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("NewPricePerPerson")
                        .HasColumnType("float");

                    b.Property<double>("OldPricePerPerson")
                        .HasColumnType("float");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValidityInDays")
                        .HasColumnType("int");

                    b.Property<int>("VisaTargetId")
                        .HasColumnType("int");

                    b.Property<string>("VisaTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisaTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisaTypeId")
                        .HasColumnType("int");

                    b.HasKey("VisaId");

                    b.HasIndex("CountryId");

                    b.HasIndex("VisaTargetId");

                    b.HasIndex("VisaTypeId");

                    b.ToTable("Visas");
                });

            modelBuilder.Entity("ManoTourism.Models.VisaCountryDocument", b =>
                {
                    b.Property<int>("VisaCountryDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaCountryDocumentId"), 1L, 1);

                    b.Property<string>("DocumentTLAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentTLEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VisaId")
                        .HasColumnType("int");

                    b.HasKey("VisaCountryDocumentId");

                    b.HasIndex("VisaId");

                    b.ToTable("VisaCountryDocuments");
                });

            modelBuilder.Entity("ManoTourism.Models.VisaRequestStatus", b =>
                {
                    b.Property<int>("VisaRequestStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaRequestStatusId"), 1L, 1);

                    b.Property<string>("StatusTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisaRequestStatusId");

                    b.ToTable("VisaRequestStatuses");

                    b.HasData(
                        new
                        {
                            VisaRequestStatusId = 1,
                            StatusTitleAr = "جديد",
                            StatusTitleEn = "New"
                        },
                        new
                        {
                            VisaRequestStatusId = 2,
                            StatusTitleAr = "المعالجة",
                            StatusTitleEn = "Processing"
                        },
                        new
                        {
                            VisaRequestStatusId = 3,
                            StatusTitleAr = "تمت المعاملة",
                            StatusTitleEn = "Finished"
                        },
                        new
                        {
                            VisaRequestStatusId = 4,
                            StatusTitleAr = "رفض الطلب",
                            StatusTitleEn = "Reject"
                        },
                        new
                        {
                            VisaRequestStatusId = 5,
                            StatusTitleAr = "الغاء الطلب",
                            StatusTitleEn = "Cancel"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.VisaTarget", b =>
                {
                    b.Property<int>("VisaTargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaTargetId"), 1L, 1);

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisaTargetId");

                    b.ToTable("VisaTargets");

                    b.HasData(
                        new
                        {
                            VisaTargetId = 1,
                            TitleAr = "داخل الإمارات العربية المتحده",
                            TitleEn = "In UAE"
                        },
                        new
                        {
                            VisaTargetId = 2,
                            TitleAr = "خارج الإمارات العربية المتحده",
                            TitleEn = "Out UAE"
                        });
                });

            modelBuilder.Entity("ManoTourism.Models.VisaType", b =>
                {
                    b.Property<int>("VisaTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaTypeId"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("VisaTitleAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisaTitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisaTypeId");

                    b.ToTable("VisaTypes");
                });

            modelBuilder.Entity("ManoTourism.Models.AssignEmployeeRoles", b =>
                {
                    b.HasOne("ManoTourism.Models.Employee", "Employee")
                        .WithMany("AssignEmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.EmployeeRole", "EmployeeRole")
                        .WithMany("AssignEmployeeRoles")
                        .HasForeignKey("EmployeeRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeRole");
                });

            modelBuilder.Entity("ManoTourism.Models.HotelImage", b =>
                {
                    b.HasOne("ManoTourism.Models.Hotel", "Hotel")
                        .WithMany("HotelImages")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("ManoTourism.Models.HotelReview", b =>
                {
                    b.HasOne("ManoTourism.Models.Hotel", "Hotel")
                        .WithMany("HotelReviews")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("ManoTourism.Models.Insurance", b =>
                {
                    b.HasOne("ManoTourism.Models.InsuranceType", "InsuranceType")
                        .WithMany()
                        .HasForeignKey("InsuranceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceType");
                });

            modelBuilder.Entity("ManoTourism.Models.OfferImage", b =>
                {
                    b.HasOne("ManoTourism.Models.Offer", "Offer")
                        .WithMany("OfferImages")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("ManoTourism.Models.Request", b =>
                {
                    b.HasOne("ManoTourism.Models.CompanyMarkting", "CompanyMarkting")
                        .WithMany()
                        .HasForeignKey("CompanyMarktingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.Employee", "Employee")
                        .WithMany("Requests")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ManoTourism.Models.ManoEntityType", "ManoEntityType")
                        .WithMany()
                        .HasForeignKey("ManoEntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.RejectReason", "RejectReason")
                        .WithMany()
                        .HasForeignKey("RejectReasonId");

                    b.HasOne("ManoTourism.Models.VisaRequestStatus", "VisaRequestStatus")
                        .WithMany()
                        .HasForeignKey("VisaRequestStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyMarkting");

                    b.Navigation("Country");

                    b.Navigation("Employee");

                    b.Navigation("ManoEntityType");

                    b.Navigation("Nationality");

                    b.Navigation("RejectReason");

                    b.Navigation("VisaRequestStatus");
                });

            modelBuilder.Entity("ManoTourism.Models.Trip", b =>
                {
                    b.HasOne("ManoTourism.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.TripTarget", "TripTarget")
                        .WithMany()
                        .HasForeignKey("TripTargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.TripType", "TripType")
                        .WithMany()
                        .HasForeignKey("TripTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("TripTarget");

                    b.Navigation("TripType");
                });

            modelBuilder.Entity("ManoTourism.Models.TripImage", b =>
                {
                    b.HasOne("ManoTourism.Models.Trip", "Trip")
                        .WithMany("TripImages")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("ManoTourism.Models.TripProgram", b =>
                {
                    b.HasOne("ManoTourism.Models.Trip", "Trip")
                        .WithMany("TripPrograms")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("ManoTourism.Models.Visa", b =>
                {
                    b.HasOne("ManoTourism.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.VisaTarget", "VisaTarget")
                        .WithMany()
                        .HasForeignKey("VisaTargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManoTourism.Models.VisaType", "VisaType")
                        .WithMany()
                        .HasForeignKey("VisaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("VisaTarget");

                    b.Navigation("VisaType");
                });

            modelBuilder.Entity("ManoTourism.Models.VisaCountryDocument", b =>
                {
                    b.HasOne("ManoTourism.Models.Visa", "Visa")
                        .WithMany("VisaCountryDocuments")
                        .HasForeignKey("VisaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visa");
                });

            modelBuilder.Entity("ManoTourism.Models.Employee", b =>
                {
                    b.Navigation("AssignEmployeeRoles");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ManoTourism.Models.EmployeeRole", b =>
                {
                    b.Navigation("AssignEmployeeRoles");
                });

            modelBuilder.Entity("ManoTourism.Models.Hotel", b =>
                {
                    b.Navigation("HotelImages");

                    b.Navigation("HotelReviews");
                });

            modelBuilder.Entity("ManoTourism.Models.Offer", b =>
                {
                    b.Navigation("OfferImages");
                });

            modelBuilder.Entity("ManoTourism.Models.Trip", b =>
                {
                    b.Navigation("TripImages");

                    b.Navigation("TripPrograms");
                });

            modelBuilder.Entity("ManoTourism.Models.Visa", b =>
                {
                    b.Navigation("VisaCountryDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
